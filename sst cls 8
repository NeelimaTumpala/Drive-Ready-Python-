# 153
# pow(1,3)+pow(5,3)+pow(3,3)
# program to check whether the given number is armstrong number or not

"""
def digitcount(num):
    dc=0
    while num:
        num=num//10
        dc+=1
    return dc
def isarmstrong(num,dc):
    if num==0:
        return 0
    return pow(num%10,dc)+isarmstrong(num//10,dc)
num=int(input())
dc=digitcount(num)
print(num==isarmstrong(num,dc))


output:


153
True

121
False
"""

# program to check perfect square or not

"""
n=int(input())
f=0
for i in range(1,n):
    if i*i==n:
        f=1
        break
if f==1:
    print("number is perfect square")
else:
    print("number is not perfect square")


output:

25
number is perfect square
"""

# to check whether the givwn number is square or not using functions
"""
def issquare(n):
    
    for i in range(1,n):
        if i*i==n:
            return "true"
    return "false"
n=int(input())
print(issquare(n))

output:

25
true

37
false

"""

# to find out the square root

"""

def sqrt(n):
    return n*n
n=int(input())
print(sqrt(n))


output:
5
25
"""

# addition of a,b

"""
def add(a,b):
    return a+b
a=10
b=20
res=add(a,b)
print(res)

output:

30

"""

# pow() --> to find out power

# to know how many factors are there

"""
import math as m
def countfactors(num):
    fc=2
    a=int(m.sqrt(num))
    for i in range(2,a+1):
        if num%i==0:
            if i==num//i:
                fc+=1
            else:
                fc+=2
    return fc
num=int(input())
print(countfactors(num))

output:

28
6
"""

# anotherway to find out factor count
"""
import math as m
def countfactors(num,a):
    if a==1:
        return 2
    if num%a==0:
        if a==num//a:
            return 1+countfactors(num,a-1)
        else:
            return 2+countfactors(num,a-1)
    else:
        return 0+countfactors(num,a-1)
num=int(input())
a=int(m.sqrt(num))
print(countfactors(num,a))  # to know whether it is prime number or not just put print(countfactors(num.a)==2)


output:

28
6

"""
