"""

Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).

 

Example 1:

Input: low = 3, high = 7
Output: 3
Explanation: The odd numbers between 3 and 7 are [3,5,7].
Example 2:

Input: low = 8, high = 10
Output: 1
Explanation: The odd numbers between 8 and 10 are [9].

program:
class Solution:
    def countOdds(self, low: int, high: int) -> int:
        if low%2==0 and high%2==0:
            return (high-low)//2
        else:
            return (high-low)//2+1




"""

"""

Every non-negative integer N has a binary representation.  For example, 5 can be represented as "101" in binary, 11 as "1011" in binary, and so on.  Note that except for N = 0, there are no leading zeroes in any binary representation.

The complement of a binary representation is the number in binary you get when changing every 1 to a 0 and 0 to a 1.  For example, the complement of "101" in binary is "010" in binary.

For a given number N in base-10, return the complement of it's binary representation as a base-10 integer.

 

Example 1:

Input: 5
Output: 2
Explanation: 5 is "101" in binary, with complement "010" in binary, which is 2 in base-10.
Example 2:

Input: 7
Output: 0
Explanation: 7 is "111" in binary, with complement "000" in binary, which is 0 in base-10.
Example 3:

Input: 10
Output: 5
Explanation: 10 is "1010" in binary, with complement "0101" in binary, which is 5 in base-10.

program:

class Solution:
    def bitwiseComplement(self, N: int) -> int:
        if N==0:
            return 1
        c=1
        rev=0
        while N:
            r=N%2
            N=N//2
            if r==0:
                r=1
            else:
                r=0
            rev=rev+r*c
            c=c*10
        p=0
        num=0
        while rev:
            r=rev%10
            rev=rev//10
            num=num+r*pow(2,p)
            p+=1
        return num


"""

# reverse remove vowels

s='computer'
l=len(s)
for i in range(l-1,-1,-1):
    if s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o' or s[i]=='u':
        continue
    else:
        print(s[i])
    
    
# factorial program

n=int(input())
s=1
for i in range(2,n+1,1):
    s=s*i
print("factorial is :",s)
    

# decimal to binary

num=int(input())
print(bin(num).replace("0b", ""))

# to check prime number
n=int(input())
c=0
if n>1:
    for i in range(2,n):
        if n%i==0:
            c=1
            break
if c==1:
    print("not a prime number")
else:
    print("prime number")


# difference between == and is in python
list1=[]
list2=[]
list3=list1
if list1==list2:
    print("True")
else:
    print("False")
if list1 is list2:
    print("True")
else:
    print("False")
if list1 is list3:
    print("True")
else:
    print("False")
list3= list3 + list2
if list1 is list3:
    print("True")
else:
    print("False")



# Python program to display the Fibonacci sequence

def recur_fibo(n):
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))

nterms = 1

# check if the number of terms is valid
if nterms <= 0:
   print("Plese enter a positive integer")
else:
   print("Fibonacci sequence:")
   for i in range(nterms):
       print(recur_fibo(i))


# Arthematic progression

a,d,n=map(int,input().split())
ct=a
for i in range(1,n+1):
    print(ct,end=" ")
    ct=ct+d
#geometric progression

def printgp(a,r,n):
    for i in range(0,n):
        ct=a*pow(r,i)
        print(ct, end = " ")
a,r,n=map(int,input().split())
printgp(a,r,n)


# sum of an array program in python

arr = [1,2,3,4,5]
sum=0
for i in range(0,len(arr)):
    sum=sum+arr[i]
print(sum)

    

# program to print second largest number

arr = [1,9,3,6,5]
arr.sort()
a=len(arr)
print(arr[a-2])

# to check armstrong number

n=int(input())
a=n
s=0
while n:
    r=n%10
    n=n//10
    s=s+pow(r,3)
if s==a:
    print("armstrong number")
else:
    print("not armstrong number")    
    
# program to check prime palindrom

import math   
n=int(input())
a=n
s=0
c=0
while n:
    r=n%10
    n=n//10
    s=s*10+r
if a==s:
    b=math.sqrt(a)
    b=int(b)
    for i in range(2,b):
        if a%i==0:
            print("palindrom but not prime")
            c=1
            break
    if c==0:
        print("prime palindrom")
else:
    print("not prime palindrom")


#program to add two arraya

arr1=[1,2,3,4]
arr2=[1,2,3,4]
arr=[]
for i in range(0,len(arr1)):
    arr.append(arr1[i]+arr2[i])
print(arr)



# another way to add arraya

import numpy as np
arr1=np.array([1,2,3,4])
arr2=np.array([1,2,3,4])
arr=np.add(arr1,arr2)
print(arr)

# program to take inputs to an array

n=int(input())
arr=[]
for i in range(n):
    m=int(input())
    arr.append(m)
print(arr)


# progarm to add elements in an array

n=int(input())
arr=[]
arr1=0
for i in range(n):
    m=int(input())
    arr.append(m)
for i in range(n):
    arr1=arr1+arr[i]
print(arr1)
    

#program to print patteren

n=int(input())
for i in range(0,n):
    for j in range(0,i+1):
        print("* ", end="")
    print("\r")
# program to print patteren in another way

n=int(input())
k=2*n-2
for i in range(0,n):
    for j in range(0,k):
        print(end=" ")
    k=k-2
    for j in range(0,i+1):
        print("* ",end="")
    print("\r")

# program to print pattern in another way

n=int(input())
k=n-1
for i in range(0,n):
    for j in range(0,k):
        print(end=" ")
    k=k-1
    for j in range(0,i+1):
        print("* ",end="")
    print("\r")


# program for printing patteren

n=int(input())
for i in range(0,n):
    for j in range(0,n):
        print("1",end="")
    print("\r")

# printing pattern with numbers


n=int(input())
num=1
for i in range(0,n):
    num=1
    for j in range(0,i+1):
        print(num,end=" ")
        num=num+1
    print("\r")
    
# to print sequence of numbers

n=int(input())
num=65
for i in range(0,n):
    
    for j in range(0,i+1):
        ch=chr(num)
        print(ch,end=" ")
        num=num+1
    print("\r")


# program to print 4th highest number

arr=[4,1,6,7,2,3,4,9,5,1,9]
arr.sort()
print(arr)
a=len(arr)
print(arr[a-4])

# to count alphabets

c="computer123"
s=0
for i in c:
    if i>=chr(65):
        s=s+1
print(s)
    


# program to print area of a circle with one value after dot

r=int(input())
pi=3.1415
a=int(pi*r*r)
print("{:.6f}".format(a))

# l.c.m
a,b=map(int,input().split())
t=2
res=1
while (a>=t or b>=t):
    if a%t==0 and b%t==0:
        a=a//t
        b=b//t
        res=res*t
    else:
        t+=1
        
print(res*a*b)



# program to find area of a circle

r=int(input())
pi=3.1415
a=(pi*r*r)
print("{:.2f}".format(a))


# program to find prime or composite

import math as m
def isprime(n):
    s=int(m.sqrt(n))
    for i in range(2,s+1):
        if n%i==0:
            return 0
    return 1
t=int(input())
for _ in range(t):
    n=int(input())
    if n>100000:
        print("invalid")
    else:
        if isprime(n):
            print("prime")
        else:
            print("composite")


# program to print perfect numbers in between series
n=int(input())
m=int(input())
c=0
for i in range(n,m):
    s=0
    for j in range(1,i):
        if i%j==0:
            s+=j
    if s==i:
        print(i)

# program to print all numbers divisible by 5 or 7 for a given number

n=int(input())
for i in range(1,n+1):
    if i%5==0 or i%7==0:
        print(i, end= " ")

# program to jumble a list

n=int(input())
d=list(map(int,input().split()))
r=int(input())
d=d[r:]+d[:r]
print(*d)


# addition of list

a={1,2,3,4}
b={4,5,6,7}
c=a.union(b)
print(c)


#program to take list input from the user and sort it

a=int(input())

input2=[]
for i in range(0,a):
    c=int(input())
    input2.append(c)
input2.sort()
print(input2)
    



